I randomly chose to code the Reverse Linked List 2 on Leetcode first. The task require coder to reverse the linked list from the node at postion left to the node at position right. For example, if there is linked list [1,2,4,5,6,7,8], left is 3 and right is 6, the result will be [1,2,7,6,5,4,8]. At first, I was confused how to solve this problem that maybe I thought should use 2-3 pointers (previous and current) as I was taught by teacher to change or delete the nodes. But there was any problem that if the given left is 1 then how I could initialize the previous node ? It takes me 1 days to think, unfortunately, I could not have the solution yet. I just knew I should use 3 nodes: previous(to contain the node before the starting node of reversing), current, next. Node current would be linked to the node that node next was linking to, then node next would be linked to the node at the start (previous -> next). Finally, the node before reversing would be linked to the node next. We must do that loop for the amount of (right minus left) time(s). For the last problem, I decided to find the answer on the internet and the key for that is the node "dummy". Dummy is a random-value node that points the head and it will move forward [left] times to get to the right node( before reversing list). To be exactly, I spent about 7 hours to think, draw step to step of the program myself and 3 hours to understand how the dummy node works after reading the tutorial on the internet. I started to work on this task at the morning of the thirteenth of April,2022 and finished at 11 o'clock on the fourteen of the next day.         